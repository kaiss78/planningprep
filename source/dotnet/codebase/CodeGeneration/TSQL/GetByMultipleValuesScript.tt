<#@ include file="../Globals/GlobalSettings.tt" #>
<#	
	
	// Do not change for this script
	string TableSuffix = "GetForUser";	
	string[] Parameters = new string[] { "UserId", "RoleId" };
	bool FilterByActiveAndDeleted = false;
	
	InitDB();

	WriteLine(string.Format("IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp{0}{1}]') AND type in (N'P', N'PC'))", FormattedBaseTableName,TableSuffix));
	WriteLine(string.Format("DROP PROCEDURE [dbo].[sp{0}{1}]", FormattedBaseTableName,TableSuffix));
	WriteLine("GO");
	WriteLine(string.Format("CREATE PROCEDURE [dbo].[sp{0}{1}] ", FormattedBaseTableName,TableSuffix));
	PushIndent("\t");
	WriteOutProcParameters(Base_Table, Parameters);
	PopIndent();
	WriteLine("AS");
	StoredProcedureComments(Base_Table.Name, TableSuffix);
	WriteLine("BEGIN");
	PushIndent("\t");
	BaseTableGets(Base_Table, Parameters, FilterByActiveAndDeleted);
	PopIndent();
	WriteLine("END");
	WriteLine("GO");
#>

<#+ 

	public void WriteOutProcParameters(Table table, string[] Parameters)
	{
		bool firstcol = true;
		foreach( Column col in table.Columns )
		{
			for(int i = 0; i < Parameters.Length; i++)
			{
				if( Parameters[i] == col.Name )
				{
					WriteLine("{2} @{0} {1}", col.Name, GetDataTypeDeclaration(col.DataType), firstcol?"  ":", ");
					firstcol=false;
				}
			}
		}
	}
	
	public void BaseTableGets(Table table, string[] Parameters, bool FilterByActiveAndDeleted)
	{
		PushIndent("\t");
		WriteLine("SET NOCOUNT ON;");
		WriteLine("");
		WriteLine("SELECT tab.*  ");		
		WriteLine("FROM {0}[{1}] tab  WITH(NOLOCK)" ,dbSchemaOwner ,table.Name );
		SetWhereColumns(table, Parameters);
		if (FilterByActiveAndDeleted)
		{
			WriteLine("  AND tab.[Deleted] = 0 AND tab.[Active] = 1");
		}
		WriteLine("ORDER BY tab.[Id] DESC, isnull(tab.[LastModifiedByDateTime],tab.[CreatedByDateTime]) DESC");
		WriteLine("");
		WriteLine("SET NOCOUNT OFF;");
		PopIndent();
	}
	
	public void SetWhereColumns(Table prmTable, string[] Parameters)
	{
		bool firstcol = true;
		
		foreach( Column column in prmTable.Columns )
		{
			for(int i = 0; i < Parameters.Length; i++)
			{
				if( Parameters[i] == column.Name )
				{ 
					WriteLine("{0} tab.[{2}]= @{1}",firstcol?"WHERE ":"  AND ", column.Name,column.Name );
					firstcol=false;
				}
			}
		}
		//PopIndent();
	}
 #>